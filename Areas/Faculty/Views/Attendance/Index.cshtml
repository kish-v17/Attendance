@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Today's Leactures";
}
<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="text-primary fw-bold mb-0">Today's Lectures</h2>
    <a asp-area="Faculty" asp-controller="Attendance" asp-action="PendingAttendance"  class="btn btn-outline-warning me-5 d-flex align-items-center gap-2 rounded-3 shadow-sm">
        <i class="ri-time-line"></i>
        <span>Pending Attendance</span>
    </a>
</div>
@if (Model != null && Model.Any())
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var item in Model)
        {
            var now = DateTime.Now.TimeOfDay;
            var hasStarted = now >= item.Lecture.StartTime;

            string ribbonClass = hasStarted
            ? (item.AttendanceStatus == LectureStatusEnum.Filled ? "success" :
            item.AttendanceStatus == LectureStatusEnum.Suspended ? "danger" :
            item.AttendanceStatus == LectureStatusEnum.Pending ? "warning" :
            "secondary")
            : "secondary";


            string ribbonText = hasStarted
            ? item.AttendanceStatus.ToString()
            : "Upcoming";

            <div class="col position-relative">
                <div class="card h-100 shadow-sm border-0 rounded-4">
                    <div class="ribbon @ribbonClass">@ribbonText</div>

                    <div class="card-body p-4">
                        <h5 class="card-title fw-semibold my-5 text-dark">
                            @item.Lecture.Subject.SubjectName
                        </h5>
                        <p class="mb-2 text-muted small">
                            <strong>Class:</strong> @item.FullClassName
                        </p>
                        <p class="mb-3 text-muted small">
                            <strong>Time:</strong> @item.Lecture.StartTime.ToString(@"hh\:mm") - @item.Lecture.EndTime.ToString(@"hh\:mm")
                        </p>

                        @if (hasStarted && item.AttendanceStatus == LectureStatusEnum.Pending)
                        {
                            <div class="mt-3 d-flex gap-2">
                                <a href="@Url.Action("Fill", "Attendance", new { id = item.Lecture.ScheduleId })" class="btn btn-outline-primary btn-sm w-100">
                                    Fill Attendance
                                </a>
                                @* <a href="@Url.Action("SuspendLecture", "Attendance", new { id = item.Lecture.ScheduleId })" class="btn btn-outline-danger btn-sm w-100"> *@
                                @*     Suspend Request *@
                                @* </a> *@
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-info rounded-4 shadow-sm">
        No lectures scheduled for today.
    </div>
}
